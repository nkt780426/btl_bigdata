## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
##
# global:
#   imageRegistry: myRegistryName
#   imagePullSecrets:
#     - myRegistryKeySecretName
#   storageClass: myStorageClass

## Bitnami Apache Kafka image version
## ref: https://hub.docker.com/r/bitnami/kafka/tags/
##
image:
  registry: docker.io
  repository: bitnami/kafka
  tag: 3.6.1-debian-11-r0
  pullPolicy: IfNotPresent

## Specify a service account
# serviceAccount:
#  name: kafka

## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  enabled: true
  storageClass: ""
  accessModes:
    - ReadWriteOnce
  size: 8Gi

## Apache Kafka configuration
##
kafka:
  server:
    extraEnvVars: []
    extraEnvVarsCM: {}
    extraEnvVarsSecret: {}
  readinessProbe:
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 5
  livenessProbe:
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 5
  config:
    autoCreateTopicsEnable: true
    deleteTopicEnable: true
    listeners: "PLAINTEXT://:9092"
    advertisedListeners: "PLAINTEXT://localhost:9092"
    advertisedHostname: "localhost"
    advertisedPort: 9092
    defaultReplicationFactor: 1
    numPartitions: 1
    autoOffsetReset: earliest
  auth:
    scramSha512:
      enabled: false
  sasl:
    enabled: false
  listener:
    security:
      protocol:
        map: CLIENT:PLAINTEXT,INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT

## ZooKeeper configuration
##
zookeeper:
  enabled: true
  nameOverride: ""
  fullnameOverride: ""
  port: 2181
  service:
    type: ClusterIP
    port: 2181
  electionPort: 3888
  electionPort:
  # Disable initContainer in zookeeper when external hosts is used
  # ref: https://github.com/bitnami/charts/pull/5049
  initContainerEnabled: true
  metrics:
    enabled: false

## Metrics exporter for Prometheus
##
metrics:
  enabled: false
  service:
    annotations: {}
    type: ClusterIP
    port: 9404
    targetPort: 9404

## Prometheus Operator configuration
##
prometheusOperator:
  enabled: false

## Prometheus exporter for JMX Agent
##
jmxExporter:
  enabled: false

## Configure resource requests and limits
##
resources: {}
#  requests:
#    memory: 256Mi
#    cpu: 250m
#  limits:
#    memory: 512Mi
#    cpu: 500m

## Ingress configuration
##
ingress:
  enabled: false
  className: ""
  ingressClassName: ""
  hosts:
    - name: chart-example.local
      path: /
      pathType: ImplementationSpecific
  tls: []
  annotations: {}
  extraHosts: []
  extraPaths: []
  extraTls: []

## NodeSelector
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/node-affinity/
##
nodeSelector: {}

## Tolerations for nodes
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []

## Affinity for nodes
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
##
affinity: {}

## Configure external database
##
externalDatabase:
  enabled: false
  existingSecret: ""
  host: ""
  port: ""
  user: ""
  password: ""
  database: ""
  schema: ""
  extraEnvVars: []
  extraEnvVarsCM: {}
  extraEnvVarsSecret: {}

## Configure volume permissions
##
volumePermissions:
  enabled: false
  image:
    registry: docker.io
    repository: bitnami/minideb
    tag: buster
    pullPolicy: IfNotPresent

## Initialize container parameters
##
initContainer:
  enabled: true

## Use an alternate scheduler
## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
##
schedulerName: ""

## Service configuration
## ref: https://kubernetes.io/docs/concepts/services-networking/service/
##
service:
  annotations: {}
  type: ClusterIP
  externalPort: 9092
  internalPort: 9092

## Set to true to create NetworkPolicy resources
## ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/
##
networkPolicy:
  enabled: false
  apiVersion: networking.k8s.io/v1
  labels: []

## Enable Horizontal Pod Autoscaler
## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
##
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

## Configuration for pod disruption budgets
## ref: https://kubernetes.io/docs/concepts/workloads/pods/disruptions/
##
podDisruptionBudget:
  enabled: false

## Set to true to enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  enabled: true
  storageClass: ""
  accessModes:
    - ReadWriteOnce
  size: 8Gi

## Configuration for kube-bench
## ref: https://github.com/aquasecurity/kube-bench
##
kubeBench:
  enabled: false

## Enable custom config
##
config:
  enabled: false
  configMapName: ""
  configMapOverride: {}
  secret:
    secretName: ""
    secretOverride: {}

## Enable custom init scripts
## Add your custom scripts to the scripts directory
##
customScripts:
  enabled: false

## Enable the prometheus plugin
##
prometheus:
  enabled: false

## Enable the exporter plugin
##
exporter:
  enabled: false

## Enable the ingress controller plugins
##
ingressControllerPlugins:
  enabled: false
  repository: ""
  tag: ""
  pullPolicy: IfNotPresent
